<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="e4b823d4-a3e2-44ad-91b2-83877a62ee38" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check price" searchProperties="true" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="e4b823d4-a3e2-44ad-91b2-83877a62ee38fileName">Check-price</con:setting></con:settings><con:testStep type="groovy" name="clearProperty" id="623c7070-9265-43f7-b8ba-f884d305a48e"><con:settings/><con:config><script>dataSuite = context.testCase.testSuite
String[] propToRemove = new String[dataSuite.getPropertyCount()];
propToRemove = dataSuite.getPropertyNames();
for ( int i = 0 ; i &lt; propToRemove.size(); i++ ){
    context.testCase.testSuite.setPropertyValue(propToRemove[i].toString(),'' );  
}</script></con:config></con:testStep><con:testStep type="restrequest" name="Get products" id="ff09f5b4-4807-4138-81d9-ea666202b7c9"><con:settings/><con:config service="https://www.mybookingpal.com" resourcePath="/xml/services/json/reservation/products/21980/2017-02-13/2017-02-20" methodName="2017-02-20" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get products" id="329d34aa-ea3a-4828-a597-c156e78b6f0b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://www.mybookingpal.com</con:endpoint><con:request/><con:originalUri>https://www.mybookingpal.com/xml/services/json/reservation/products/21980/2017-02-13/2017-02-20</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="76f23de8-4d8a-4c12-a77c-072987fd1e2b" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="01229c43-106d-48cd-9e1f-66532fb0b0cf" name="Contains"><con:configuration><token>TT12</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" id="cd28382f-676a-48f1-be96-8f84f1a44119" name="XPath Match"><con:configuration><path>declare namespace ns1='https://www.mybookingpal.com/xml/services/json/reservation/products/21980/2017-02-13/2017-02-20';
//ns1:Response[1]/ns1:search_response[1]/ns1:search_quotes[1]/ns1:quote[1]/ns1:e[1]/ns1:productid[1]</path><content>1234588489</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>pos</con:entry><con:entry>guests</con:entry><con:entry>amenity</con:entry><con:entry>currency</con:entry><con:entry>exec_match</con:entry><con:entry>display_inquire_only</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetProductIDandQuote" id="7db08cef-283d-45a1-b6c1-0fcbb6680b90"><con:settings/><con:config><script>def propduct_id = context.expand( '${Get products#Response#$.search_response.search_quotes.quote[0].productid}' )
def quote = context.expand( '${Get products#Response#$.search_response.search_quotes.quote[0].price}' )

log.info(propduct_id)

if (propduct_id != null) {
	context.testCase.testSuite.setPropertyValue( 'propduct_id', propduct_id)
}

if (quote != null) {
	context.testCase.testSuite.setPropertyValue( 'quote', quote)
}</script></con:config></con:testStep><con:testStep type="assertionteststep" name="CheckIDandPrice" id="583fa3f1-b78b-4232-a861-f91402d5551f"><con:settings/><con:config xsi:type="con:AssertionTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:entry><con:id>59631c57-f229-4449-884a-ee6a97027006</con:id><con:isGroup>false</con:isGroup><con:sourceId>e9eb844d-34f2-4395-ac1b-6f7f3587f3cb</con:sourceId><con:propertyName>propduct_id</con:propertyName><con:assertion type="Simple Contains" name="propduct_id" id="2c20bc6c-0ab3-4094-b39e-91a9809b6557"><con:configuration><token>1234588489</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:entry><con:entry><con:id>a8266aec-e47d-41d7-b85b-b0fb5dd9f048</con:id><con:isGroup>false</con:isGroup><con:sourceId>e9eb844d-34f2-4395-ac1b-6f7f3587f3cb</con:sourceId><con:propertyName>quote</con:propertyName><con:assertion type="Simple Contains" name="Price" id="a31c5fb4-f0b4-4daf-bc2f-c710c081f6b0"><con:configuration><token>700</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:entry></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>623c7070-9265-43f7-b8ba-f884d305a48e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>